package:
  name: {{ environ.get('RECIPE', 'torch2rt') | lower }}
  version: {{ environ.get('GIT_DESCRIBE_TAG', '').replace('v', '') }}

source:
  git_rev: {{ GIT_DESCRIBE_TAG }}
  git_rev: 81024cc
  git_rev: v0.3.0
  git_url: https://github.com/NVIDIA-AI-IOT/torch2trt

build:
  number: 0
  #   {{ GIT_DESCRIBE_NUMBER }}
  # {% if environ.get('GIT_DESCRIBE_NUMBER', '0') == '0' %}string: py{{ environ.get('PY_VER').replace('.', '') }}{{ environ.get('BLD_STR_SUFFIX') }}_0
  # {% else %}string: py{{ environ.get('PY_VER').replace('.', '') }}{{ environ.get('BLD_STR_SUFFIX') }}_{{ environ.get('GIT_BUILD_STR', 'GIT_STUB') }}{% endif %}
  script_env:
    - TORCH_CUDA_ARCH_LIST
  # FIXME: --plugins --contrib not working with v0.3.0
  # script: python setup.py install --plugins --contrib
  # script: pip install -vv --install-option="--plugins" --install-option="--contrib" --no-deps --ignore-installed --no-build-isolation --no-binary ':all:' .
  # script: pip install -vv --install-option="--plugins" --no-deps --ignore-installed --no-build-isolation --no-binary ':all:' .
  script: pip install -vv --no-deps --ignore-installed --no-build-isolation --no-binary ':all:' .

requirements:
  build:
    - {{ compiler('cxx') }}
    #- nvcc_linux-64 # [linux]
  host:
    - python={{ PY_VER }}
    - pytorch={{ PTH_VER }}
    - tensorrt={{ TRT_VER }}
  run:
    - numpy
    - python={{ PY_VER }}
    - pytorch::pytorch={{ PTH_VER }}
    - pytorch::torchvision={{ PTV_VER }}
    - tensorrt={{ TRT_VER }}
test:
  imports:
    - torch2trt
    - torch2trt.torch2trt
  commands:

about:
  home: https://github.com/NVIDIA-AI-IOT/torch2trt
  license: Proprietary
  license_family: Proprietary
  summary: PyTorch module adapter for TensorRT